services:
  db:
    image: postgres:17
    container_name: postgres_db
    restart: always
    environment:
      POSTGRES_DB: ${DB_NAME}
      POSTGRES_USER: ${PG_USER}
      POSTGRES_PASSWORD: ${PG_PASSWORD}
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${PG_USER} -d ${DB_NAME}"]
      interval: 5s
      timeout: 3s
      retries: 5
    volumes:
      - db-data:/var/lib/postgresql/data
      - ./internal/storage/postgres/schema/init.sql:/docker-entrypoint-initdb.d/init.sql:ro
    ports:
      - "5432:5432"
  redis:
    image: redis:8.2.0
    container_name: redis_server
    restart: always
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 3s
      retries: 5
    ports:
      - "${REDIS_HOST}:${REDIS_HOST}"
    volumes:
      - redis-data:/data

  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: my-app
    ports:
      - "${ADDR}:${ADDR}"
    env_file:
      - .env
    depends_on:
      db: { condition: service_healthy}
      redis: { condition: service_healthy}
      
volumes:
  db-data:
  redis-data: